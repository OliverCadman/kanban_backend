version: "3.7"

services:
  flask:
    build:
      context: .
    container_name: flask
    restart: always
    environment:
      - APP_ENV="prod"
      - APP_DEBUG="True"
      - APP_PORT=8000
      - SECRET_KEY=${SECRET_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - MONGODB_DATABASE=${MONGODB_DATABASE}
      - MONGODB_USERNAME=${MONGODB_USERNAME}
      - MONGODB_PASSWORD=${MONGODB_PASSWORD}
      - MONGODB_HOSTNAME=${MONGODB_HOSTNAME}
      - VALIDATE_EMAIL_API_KEY=${VALIDATE_EMAIL_API_KEY}
      - SECURITY_PASSWORD_SALT=${SECURITY_PASSWORD_SALT}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_SERVER=${MAIL_SERVER}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_USE_TLS=${MAIL_USE_TLS}
      - MAIL_USE_SSL=${MAIL_USE_SSL}
      - MAIL_DEBUG=${MAIL_DEBUG}
      - MAIL_DEFAULT_SENDER=${MAIL_DEFAULT_SENDER}
    command: >
      sh -c "python run.py"
    volumes:
      - ./app:/app
    depends_on:
      - mongodb
    networks:
      - frontend
      - backend
    ports:
      - "8000:8000"
      - "443:443"

  mongodb:
    image: mongo:4.0.8
    container_name: mongodb
    restart: always
    command: mongod --auth
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
      - MONGODB_DATA_DIR=${MONGODB_DATA_DIR}
      - MONGODB_LOG_DIR=${MONGODB_LOG_DIR}
    volumes:
      - mongodbdata:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "27017:27017"
    networks:
      - backend

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  mongodbdata:
    driver: local
  app:
    driver: local
